<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Code School | So You Want to Go to Code School]]></title>
  <link href="http://codeschoolbook.github.io/blog/categories/code-school/atom.xml" rel="self"/>
  <link href="http://codeschoolbook.github.io/"/>
  <updated>2016-08-28T13:42:55-07:00</updated>
  <id>http://codeschoolbook.github.io/</id>
  <author>
    <name><![CDATA[Katie Leonard]]></name>
    <email><![CDATA[keighty.leonard@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Can Self-Study Achieve the Same Goal as a Coding Bootcamp?]]></title>
    <link href="http://codeschoolbook.github.io/blog/2015/can-self-study-achieve-the-same-goal-as-a-coding-bootcamp/"/>
    <updated>2015-11-02T00:00:00-08:00</updated>
    <id>http://codeschoolbook.github.io/blog/2015/can-self-study-achieve-the-same-goal-as-a-coding-bootcamp</id>
    <content type="html"><![CDATA[<p>The internet is full of free resources for learning how to write code, and all of the technical content covered at a typical code school can be learned independently. So why are so many people opting to pay for content that they can easily find for free?</p>

<p>TechCrunch recently published an <a href="http://techcrunch.com/2015/10/23/coding-academies-are-nonsense/">article</a> by Stephen Nichols titled &ldquo;Coding Academies are Nonsense.&rdquo; While I disagree with the thesis (for obvious reasons), the biggest problem with the article is the assumption that code schools are only about learning to code, which anyone can do through self-study. Coding is only part of being a programmer, and code schools provide a lot more.<!--more--></p>

<h3>Structure</h3>

<p>In an <a href="http://kwugirl.blogspot.com/2015/10/coding-academies-are-not-nonsense-for.html">awesome rebuttal</a> to Nichols' article, Katherine Wu points out that there are a lot of other benefits to be had at bootcamp, such as &ldquo;social pressure to get yourself to do something you wanted to do already, guidance towards a particular curriculum, and faster learning from having concentrated help.&rdquo;</p>

<p>A beginner programmer is learning to converse in a foreign language without fully knowing the grammar, while solving logic problems. You will run into a lot of walls early on, and experience many frustrating hours simply trying to articulate the part of the problem you don&rsquo;t understand. Being surrounded by co-learners ensures that you will not stay stuck for too long &ndash; hitting the wall with a team behind you means that someone can give you a boost. Also, having constant access to a teacher who can help you identify the next best thing to learn will make your journey more efficient.</p>

<h3>Teamwork</h3>

<p>Probably none of the software you find most useful in your day to day life was coded by a single developer. Writing code can be done alone, but creating software that people will use requires teamwork. Stanley Idesis posted a great answer to <a href="http://www.quora.com/Programming-Bootcamps/Self-study-vs-Boot-camp-Starting-from-zero-can-self-study-achieve-the-same-goal-become-dev-at-a-decent-west-coast-company-as-attending-a-boot-camp">this question on Quora</a>, pointing out that software is not created in a code vacuum:</p>

<blockquote><p>As a recruiter looking over your resume, I want to see examples of where you worked in tandem with other developers&hellip; to create something together. This shows me that you can function as part of a team.</p></blockquote>

<p>Most people have a hard time leaping from following a beginner tutorial to building software that people want to use, and getting the courage to contribute to open source is daunting even for more experienced programmers &ndash; daunting, but not impossible. Code schools are all about collaboration and co-learning through pair programming, and for many students that lowers the barrier to entry.</p>

<h3>Purpose</h3>

<p>After few years of self-study, I had produced two clunky Android apps and a half-dozen blog platforms in different languages from following tutorials. You can learn to code by yourself, but you can&rsquo;t learn to develop software without a purpose.</p>

<p>Code school curriculum includes projects that are invented by students from conception through deployment. I had a hard time coming up with an interesting project that would break new ground and showcase my new technical skills, but I had an awesome mentors at code school (thanks Chuck!). He encouraged me to write a programming language (Check it out on <a href="https://github.com/keighty/eh-">GitHub &ndash; Eh?</a>), which was a scary proposition for a beginner. He gave me the resources and support that I needed to make a start, and my project impressed a few hiring managers.</p>

<p>I do agree with Nichols that &ldquo;learning to translate intent to a non-human foreign language — coding — is pretty daunting, even with handholding instruction&hellip; [but it] is a skill that anyone with intelligence and determination can learn.&rdquo; If it can be made any easier with a little handholding instruction, I will opt for the help any day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What if You Don’t Get Into Code School the First Time?]]></title>
    <link href="http://codeschoolbook.github.io/blog/2015/what-if-you-dont-get-into-code-school-the-first-time/"/>
    <updated>2015-09-25T00:00:00-07:00</updated>
    <id>http://codeschoolbook.github.io/blog/2015/what-if-you-dont-get-into-code-school-the-first-time</id>
    <content type="html"><![CDATA[<p>I didn&rsquo;t get into code school the first time I applied. I set my sights on a program but didn&rsquo;t make the first cut. Even though I had some programming experience, my application did not stand out enough to score me an interview. I was disappointed, but took advantage of the opportunity to firm up my financial footing and beef up my application. If your heart is set on a particular school, city, and program, don&rsquo;t be discouraged if you don&rsquo;t get in the first time you apply.<!--more--></p>

<h4>Work on your GitHub profile</h4>

<p><img class="right <a" src="href="https://git-scm.com/images/logo@2x.png">https://git-scm.com/images/logo@2x.png</a>" width="220" height="92" title="&lsquo;Git&rsquo; &lsquo;Git logo&rsquo;" ></p>

<p>Code school isn&rsquo;t the only way to learn how to code, and downtime between application cycles is the perfect opportunity to learn and practice. After all, how do you know if you will enjoy coding as a career if you haven&rsquo;t ever tried it? If you don&rsquo;t already have one, get yourself a <a href="http://github.com/">GitHub</a> account. GitHub is an online repository for code that uses <a href="https://git-scm.com/">Git</a> version control to track changes. You will be using these or similar tools every day as a software developer, so you can&rsquo;t be familiar enough with these tools.</p>

<p>Every time you go through a tutorial, dabble in a new language, or start a new project, you should add your source code to GitHub. You may be shy about posting unfinished code on the internet, but no one will be looking until you are applying to code school (or your first job).</p>

<h4>Take an online course</h4>

<p><img class="right <a" src="href="https://www.edx.org/sites/default/files/theme/edx-logo-header.png">https://www.edx.org/sites/default/files/theme/edx-logo-header.png</a>" width="93" height="47" title="&lsquo;EdX&rsquo; &lsquo;EdX logo&rsquo;" ></p>

<p><a href="http://www.coursera.org/">Coursera</a>, <a href="https://www.edx.org/">EdX</a>, and <a href="http://online.stanford.edu/courses">Stanford Online</a> offer free learn-to-program or expand-your-skill-set courses. Taking some of these online offerings will not only beef up your application by showing your dedication to learning to code, but it will also help you be more prepared for the program. You can use these tools to learn programming in a new language, how to process handle Big Data, or create a video game. The forums will connect you with the community at large, and there may be a meetup where students get together in person to watch the videos or work through problems.</p>

<h4>Work on your soft skills</h4>

<p><img class="right <a" src="href="http://img2.meetupstatic.com/img/8308650022681532654/header/logo-2x.png">http://img2.meetupstatic.com/img/8308650022681532654/header/logo-2x.png</a>" width="136" height="90" title="&lsquo;Meetup&rsquo; &lsquo;Meetup logo&rsquo;" ></p>

<p>Your code school application should contain more than just code. The admissions people look for well-rounded applications. Learning to code is like learning any other new skill, and if you haven&rsquo;t done that in a while, it is time to flex your brain by picking up something new. Find something to do that isn&rsquo;t coding and take a deep dive. Try a workshop, or an art class. Join a sports team, or <a href="http://www.meetup.com/">Meetup</a> about a topic that seems interesting. Your admissions interview will go much better if you can talk about a time when you took a risk and it paid off &ndash; or, if it didn&rsquo;t, what you learned from the experience. If you have dozens of incomplete projects in your wake, pick one and finish it. Showing that you have a track record of starting and finishing a project will help: past success is the biggest indicator of future success.</p>

<h4>Get in touch with the school</h4>

<p>Talk to people who are involved in your code school&rsquo;s community. The school itself may organize workshops, lectures, or tours. Take advantage of as many opportunities as you can to explore the curriculum and meet the teachers. You may get some helpful tips from teachers or former students on how to improve your application. Also, keep in mind that there are many schools available. Your first choice does not have to be your only choice. Explore other options and other schools.</p>

<p>Code school admissions is not a straightforward first-come-first-served process. Building a cohort of students takes consideration, and schools are looking for a variety of backgrounds, skill levels, and personalities. If you don&rsquo;t get into code school the first time you apply, ask why! They may be able to give you some tips on how to further improve your application.</p>
]]></content>
  </entry>
  
</feed>
